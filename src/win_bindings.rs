// Bindings generated by `windows-bindgen` 0.58.0

#![allow(
    non_snake_case,
    non_upper_case_globals,
    non_camel_case_types,
    dead_code,
    clippy::all
)]
#[inline]
pub unsafe fn FreeMibTable(memory: *const core::ffi::c_void) {
    windows_targets::link!("iphlpapi.dll" "system" fn FreeMibTable(memory : *const core::ffi::c_void));
    FreeMibTable(memory)
}
#[inline]
pub unsafe fn GetIpInterfaceTable(
    family: ADDRESS_FAMILY,
    table: *mut *mut MIB_IPINTERFACE_TABLE,
) -> WIN32_ERROR {
    windows_targets::link!("iphlpapi.dll" "system" fn GetIpInterfaceTable(family : ADDRESS_FAMILY, table : *mut *mut MIB_IPINTERFACE_TABLE) -> WIN32_ERROR);
    GetIpInterfaceTable(family, table)
}
#[inline]
pub unsafe fn GetUnicastIpAddressTable(
    family: ADDRESS_FAMILY,
    table: *mut *mut MIB_UNICASTIPADDRESS_TABLE,
) -> WIN32_ERROR {
    windows_targets::link!("iphlpapi.dll" "system" fn GetUnicastIpAddressTable(family : ADDRESS_FAMILY, table : *mut *mut MIB_UNICASTIPADDRESS_TABLE) -> WIN32_ERROR);
    GetUnicastIpAddressTable(family, table)
}
#[repr(transparent)]
#[derive(PartialEq, Eq, Copy, Clone, Default)]
pub struct ADDRESS_FAMILY(pub u16);
impl windows_core::TypeKind for ADDRESS_FAMILY {
    type TypeKind = windows_core::CopyType;
}
impl core::fmt::Debug for ADDRESS_FAMILY {
    fn fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result {
        f.debug_tuple("ADDRESS_FAMILY").field(&self.0).finish()
    }
}
pub const AF_INET: ADDRESS_FAMILY = ADDRESS_FAMILY(2u16);
pub const AF_INET6: ADDRESS_FAMILY = ADDRESS_FAMILY(23u16);
pub const AF_UNSPEC: ADDRESS_FAMILY = ADDRESS_FAMILY(0u16);
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq)]
pub struct BOOLEAN(pub u8);
impl Default for BOOLEAN {
    fn default() -> Self {
        unsafe { core::mem::zeroed() }
    }
}
impl windows_core::TypeKind for BOOLEAN {
    type TypeKind = windows_core::CopyType;
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct IN6_ADDR {
    pub u: IN6_ADDR_0,
}
impl windows_core::TypeKind for IN6_ADDR {
    type TypeKind = windows_core::CopyType;
}
impl Default for IN6_ADDR {
    fn default() -> Self {
        unsafe { core::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Clone, Copy)]
pub union IN6_ADDR_0 {
    pub Byte: [u8; 16],
    pub Word: [u16; 8],
}
impl windows_core::TypeKind for IN6_ADDR_0 {
    type TypeKind = windows_core::CopyType;
}
impl Default for IN6_ADDR_0 {
    fn default() -> Self {
        unsafe { core::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct IN_ADDR {
    pub S_un: IN_ADDR_0,
}
impl windows_core::TypeKind for IN_ADDR {
    type TypeKind = windows_core::CopyType;
}
impl Default for IN_ADDR {
    fn default() -> Self {
        unsafe { core::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Clone, Copy)]
pub union IN_ADDR_0 {
    pub S_un_b: IN_ADDR_0_0,
    pub S_un_w: IN_ADDR_0_1,
    pub S_addr: u32,
}
impl windows_core::TypeKind for IN_ADDR_0 {
    type TypeKind = windows_core::CopyType;
}
impl Default for IN_ADDR_0 {
    fn default() -> Self {
        unsafe { core::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Clone, Copy, Debug, Eq, PartialEq)]
pub struct IN_ADDR_0_0 {
    pub s_b1: u8,
    pub s_b2: u8,
    pub s_b3: u8,
    pub s_b4: u8,
}
impl windows_core::TypeKind for IN_ADDR_0_0 {
    type TypeKind = windows_core::CopyType;
}
impl Default for IN_ADDR_0_0 {
    fn default() -> Self {
        unsafe { core::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Clone, Copy, Debug, Eq, PartialEq)]
pub struct IN_ADDR_0_1 {
    pub s_w1: u16,
    pub s_w2: u16,
}
impl windows_core::TypeKind for IN_ADDR_0_1 {
    type TypeKind = windows_core::CopyType;
}
impl Default for IN_ADDR_0_1 {
    fn default() -> Self {
        unsafe { core::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct MIB_IPINTERFACE_ROW {
    pub Family: ADDRESS_FAMILY,
    pub InterfaceLuid: NET_LUID_LH,
    pub InterfaceIndex: u32,
    pub MaxReassemblySize: u32,
    pub InterfaceIdentifier: u64,
    pub MinRouterAdvertisementInterval: u32,
    pub MaxRouterAdvertisementInterval: u32,
    pub AdvertisingEnabled: BOOLEAN,
    pub ForwardingEnabled: BOOLEAN,
    pub WeakHostSend: BOOLEAN,
    pub WeakHostReceive: BOOLEAN,
    pub UseAutomaticMetric: BOOLEAN,
    pub UseNeighborUnreachabilityDetection: BOOLEAN,
    pub ManagedAddressConfigurationSupported: BOOLEAN,
    pub OtherStatefulConfigurationSupported: BOOLEAN,
    pub AdvertiseDefaultRoute: BOOLEAN,
    pub RouterDiscoveryBehavior: NL_ROUTER_DISCOVERY_BEHAVIOR,
    pub DadTransmits: u32,
    pub BaseReachableTime: u32,
    pub RetransmitTime: u32,
    pub PathMtuDiscoveryTimeout: u32,
    pub LinkLocalAddressBehavior: NL_LINK_LOCAL_ADDRESS_BEHAVIOR,
    pub LinkLocalAddressTimeout: u32,
    pub ZoneIndices: [u32; 16],
    pub SitePrefixLength: u32,
    pub Metric: u32,
    pub NlMtu: u32,
    pub Connected: BOOLEAN,
    pub SupportsWakeUpPatterns: BOOLEAN,
    pub SupportsNeighborDiscovery: BOOLEAN,
    pub SupportsRouterDiscovery: BOOLEAN,
    pub ReachableTime: u32,
    pub TransmitOffload: NL_INTERFACE_OFFLOAD_ROD,
    pub ReceiveOffload: NL_INTERFACE_OFFLOAD_ROD,
    pub DisableDefaultRoutes: BOOLEAN,
}
impl windows_core::TypeKind for MIB_IPINTERFACE_ROW {
    type TypeKind = windows_core::CopyType;
}
impl Default for MIB_IPINTERFACE_ROW {
    fn default() -> Self {
        unsafe { core::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct MIB_IPINTERFACE_TABLE {
    pub NumEntries: u32,
    pub Table: [MIB_IPINTERFACE_ROW; 1],
}
impl windows_core::TypeKind for MIB_IPINTERFACE_TABLE {
    type TypeKind = windows_core::CopyType;
}
impl Default for MIB_IPINTERFACE_TABLE {
    fn default() -> Self {
        unsafe { core::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct MIB_UNICASTIPADDRESS_ROW {
    pub Address: SOCKADDR_INET,
    pub InterfaceLuid: NET_LUID_LH,
    pub InterfaceIndex: u32,
    pub PrefixOrigin: NL_PREFIX_ORIGIN,
    pub SuffixOrigin: NL_SUFFIX_ORIGIN,
    pub ValidLifetime: u32,
    pub PreferredLifetime: u32,
    pub OnLinkPrefixLength: u8,
    pub SkipAsSource: BOOLEAN,
    pub DadState: NL_DAD_STATE,
    pub ScopeId: SCOPE_ID,
    pub CreationTimeStamp: i64,
}
impl windows_core::TypeKind for MIB_UNICASTIPADDRESS_ROW {
    type TypeKind = windows_core::CopyType;
}
impl Default for MIB_UNICASTIPADDRESS_ROW {
    fn default() -> Self {
        unsafe { core::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct MIB_UNICASTIPADDRESS_TABLE {
    pub NumEntries: u32,
    pub Table: [MIB_UNICASTIPADDRESS_ROW; 1],
}
impl windows_core::TypeKind for MIB_UNICASTIPADDRESS_TABLE {
    type TypeKind = windows_core::CopyType;
}
impl Default for MIB_UNICASTIPADDRESS_TABLE {
    fn default() -> Self {
        unsafe { core::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Clone, Copy)]
pub union NET_LUID_LH {
    pub Value: u64,
    pub Info: NET_LUID_LH_0,
}
impl windows_core::TypeKind for NET_LUID_LH {
    type TypeKind = windows_core::CopyType;
}
impl Default for NET_LUID_LH {
    fn default() -> Self {
        unsafe { core::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Clone, Copy, Debug, Eq, PartialEq)]
pub struct NET_LUID_LH_0 {
    pub _bitfield: u64,
}
impl windows_core::TypeKind for NET_LUID_LH_0 {
    type TypeKind = windows_core::CopyType;
}
impl Default for NET_LUID_LH_0 {
    fn default() -> Self {
        unsafe { core::mem::zeroed() }
    }
}
#[repr(transparent)]
#[derive(PartialEq, Eq, Copy, Clone, Default)]
pub struct NL_DAD_STATE(pub i32);
impl windows_core::TypeKind for NL_DAD_STATE {
    type TypeKind = windows_core::CopyType;
}
impl core::fmt::Debug for NL_DAD_STATE {
    fn fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result {
        f.debug_tuple("NL_DAD_STATE").field(&self.0).finish()
    }
}
#[repr(C)]
#[derive(Clone, Copy, Debug, Eq, PartialEq)]
pub struct NL_INTERFACE_OFFLOAD_ROD {
    pub _bitfield: u8,
}
impl windows_core::TypeKind for NL_INTERFACE_OFFLOAD_ROD {
    type TypeKind = windows_core::CopyType;
}
impl Default for NL_INTERFACE_OFFLOAD_ROD {
    fn default() -> Self {
        unsafe { core::mem::zeroed() }
    }
}
#[repr(transparent)]
#[derive(PartialEq, Eq, Copy, Clone, Default)]
pub struct NL_LINK_LOCAL_ADDRESS_BEHAVIOR(pub i32);
impl windows_core::TypeKind for NL_LINK_LOCAL_ADDRESS_BEHAVIOR {
    type TypeKind = windows_core::CopyType;
}
impl core::fmt::Debug for NL_LINK_LOCAL_ADDRESS_BEHAVIOR {
    fn fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result {
        f.debug_tuple("NL_LINK_LOCAL_ADDRESS_BEHAVIOR")
            .field(&self.0)
            .finish()
    }
}
#[repr(transparent)]
#[derive(PartialEq, Eq, Copy, Clone, Default)]
pub struct NL_PREFIX_ORIGIN(pub i32);
impl windows_core::TypeKind for NL_PREFIX_ORIGIN {
    type TypeKind = windows_core::CopyType;
}
impl core::fmt::Debug for NL_PREFIX_ORIGIN {
    fn fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result {
        f.debug_tuple("NL_PREFIX_ORIGIN").field(&self.0).finish()
    }
}
#[repr(transparent)]
#[derive(PartialEq, Eq, Copy, Clone, Default)]
pub struct NL_ROUTER_DISCOVERY_BEHAVIOR(pub i32);
impl windows_core::TypeKind for NL_ROUTER_DISCOVERY_BEHAVIOR {
    type TypeKind = windows_core::CopyType;
}
impl core::fmt::Debug for NL_ROUTER_DISCOVERY_BEHAVIOR {
    fn fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result {
        f.debug_tuple("NL_ROUTER_DISCOVERY_BEHAVIOR")
            .field(&self.0)
            .finish()
    }
}
#[repr(transparent)]
#[derive(PartialEq, Eq, Copy, Clone, Default)]
pub struct NL_SUFFIX_ORIGIN(pub i32);
impl windows_core::TypeKind for NL_SUFFIX_ORIGIN {
    type TypeKind = windows_core::CopyType;
}
impl core::fmt::Debug for NL_SUFFIX_ORIGIN {
    fn fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result {
        f.debug_tuple("NL_SUFFIX_ORIGIN").field(&self.0).finish()
    }
}
pub const NO_ERROR: WIN32_ERROR = WIN32_ERROR(0u32);
#[repr(C)]
#[derive(Clone, Copy)]
pub struct SCOPE_ID {
    pub Anonymous: SCOPE_ID_0,
}
impl windows_core::TypeKind for SCOPE_ID {
    type TypeKind = windows_core::CopyType;
}
impl Default for SCOPE_ID {
    fn default() -> Self {
        unsafe { core::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Clone, Copy)]
pub union SCOPE_ID_0 {
    pub Anonymous: SCOPE_ID_0_0,
    pub Value: u32,
}
impl windows_core::TypeKind for SCOPE_ID_0 {
    type TypeKind = windows_core::CopyType;
}
impl Default for SCOPE_ID_0 {
    fn default() -> Self {
        unsafe { core::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Clone, Copy, Debug, Eq, PartialEq)]
pub struct SCOPE_ID_0_0 {
    pub _bitfield: u32,
}
impl windows_core::TypeKind for SCOPE_ID_0_0 {
    type TypeKind = windows_core::CopyType;
}
impl Default for SCOPE_ID_0_0 {
    fn default() -> Self {
        unsafe { core::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct SOCKADDR_IN {
    pub sin_family: ADDRESS_FAMILY,
    pub sin_port: u16,
    pub sin_addr: IN_ADDR,
    pub sin_zero: [i8; 8],
}
impl windows_core::TypeKind for SOCKADDR_IN {
    type TypeKind = windows_core::CopyType;
}
impl Default for SOCKADDR_IN {
    fn default() -> Self {
        unsafe { core::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct SOCKADDR_IN6 {
    pub sin6_family: ADDRESS_FAMILY,
    pub sin6_port: u16,
    pub sin6_flowinfo: u32,
    pub sin6_addr: IN6_ADDR,
    pub Anonymous: SOCKADDR_IN6_0,
}
impl windows_core::TypeKind for SOCKADDR_IN6 {
    type TypeKind = windows_core::CopyType;
}
impl Default for SOCKADDR_IN6 {
    fn default() -> Self {
        unsafe { core::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Clone, Copy)]
pub union SOCKADDR_IN6_0 {
    pub sin6_scope_id: u32,
    pub sin6_scope_struct: SCOPE_ID,
}
impl windows_core::TypeKind for SOCKADDR_IN6_0 {
    type TypeKind = windows_core::CopyType;
}
impl Default for SOCKADDR_IN6_0 {
    fn default() -> Self {
        unsafe { core::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Clone, Copy)]
pub union SOCKADDR_INET {
    pub Ipv4: SOCKADDR_IN,
    pub Ipv6: SOCKADDR_IN6,
    pub si_family: ADDRESS_FAMILY,
}
impl windows_core::TypeKind for SOCKADDR_INET {
    type TypeKind = windows_core::CopyType;
}
impl Default for SOCKADDR_INET {
    fn default() -> Self {
        unsafe { core::mem::zeroed() }
    }
}
#[repr(transparent)]
#[derive(PartialEq, Eq, Copy, Clone, Default)]
pub struct WIN32_ERROR(pub u32);
impl windows_core::TypeKind for WIN32_ERROR {
    type TypeKind = windows_core::CopyType;
}
impl core::fmt::Debug for WIN32_ERROR {
    fn fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result {
        f.debug_tuple("WIN32_ERROR").field(&self.0).finish()
    }
}
